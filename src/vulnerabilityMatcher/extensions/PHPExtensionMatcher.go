package extensions

import (
	"github.com/uptrace/bun"
	"log"
)

// PHPExtensionVulnerabilityMatcher handles vulnerability matching for PHP extensions
type PHPExtensionVulnerabilityMatcher struct{}

// ExtensionVulnerabilityMatch represents a vulnerability match for a PHP extension
type ExtensionVulnerabilityMatch struct {
	VulnerabilityID string
	PackageName     string
	PackageVersion  string
	Severity        string
	CVSS            float64
	Summary         string
	Details         string
	References      []string
	PublishedDate   string
	ModifiedDate    string
	WithdrawnDate   string
	Source          string
}

// MatchExtensionVulnerabilities finds vulnerabilities for PHP extensions
func (matcher *PHPExtensionVulnerabilityMatcher) MatchExtensionVulnerabilities(
	extensionName string,
	extensionVersion string,
	knowledge_db *bun.DB,
) ([]ExtensionVulnerabilityMatch, error) {

	// Initialize empty slice instead of nil
	matches := make([]ExtensionVulnerabilityMatch, 0)

	// For now, implement a simplified version that can be extended
	// Match against NVD vulnerabilities with basic PHP extension patterns
	log.Printf("Analyzing extension %s version %s for vulnerabilities", extensionName, extensionVersion)

	// TODO: Implement full NVD and OSV matching
	// For initial implementation, return empty list
	// This can be extended with proper vulnerability database integration

	return matches, nil
}

// IsVulnerabilityRelevant checks if an extension is relevant for vulnerability tracking
func IsVulnerabilityRelevant(extensionName string) bool {
	// Core extensions that are commonly vulnerable
	vulnerableExtensions := map[string]bool{
		"curl":      true,
		"openssl":   true,
		"gd":        true,
		"xml":       true,
		"libxml":    true,
		"zip":       true,
		"mysqli":    true,
		"pdo":       true,
		"soap":      true,
		"ftp":       true,
		"iconv":     true,
		"mbstring":  true,
		"fileinfo":  true,
		"exif":      true,
		"filter":    true,
		"hash":      true,
		"intl":      true,
		"json":      true,
		"session":   true,
		"sqlite3":   true,
		"xmlreader": true,
		"xmlwriter": true,
		"simplexml": true,
		"dom":       true,
	}

	return vulnerableExtensions[extensionName]
}
